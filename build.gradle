plugins {
    id 'java-library'
    id 'idea'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
}

ext {
    superCsvVersion = '2.4.0'
    poiVer = '5.2.3'
    guavaVersion = '29.0-jre'
    jacksonVersion = '2.14.+'
    slf4jVersion = '1.7.36'
    logbackVersion = '1.2.12'
}

group 'joycai'
version '1.0.3'

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }
    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it,
                            exclude: [
                                    "**/http/**",
                                    "**/*DTO*",
                                    "**/*Type*",
                                    "**/*Entity*",
                                    "**/*Repo*"])
                })
        )
    }
}

repositories {
    mavenCentral()
    jcenter()
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectVersion", "0.2.2"
        property "sonar.projectKey", "Joycai_JoycaiFileUtil"
        property "sonar.organization", "joycai"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.scala.scoverage.reportPath", ["build/reports/scoverage/scoverage.xml"]
    }
}

dependencies {
    api group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    implementation group: 'com.google.guava', name: 'guava', version: guavaVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    //poi
    implementation group: 'org.apache.poi', name: 'poi', version: poiVer
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: poiVer

    //csv
    implementation group: 'net.sf.supercsv', name: 'super-csv-java8', version: superCsvVersion

    testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    testImplementation(platform('org.junit:junit-bom:5.7.0'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.mockito:mockito-core:3.6.28')
}

tasks.withType(JavaCompile).tap {
    configureEach {
        options.encoding = 'UTF-8'
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

tasks.register( "createDirs") {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}